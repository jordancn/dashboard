name: Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Build Docker images
      - name: Build Docker images
        run: |
          cp docker-compose.yml docker-compose-${{ github.sha }}.yml
          GIT_COMMIT_SHA=${{ github.sha }} docker-compose build

      # Step 3: Save Docker images to tar files
      - name: Save Docker images to tar files
        run: |
          docker save -o dashboard-nextjs-build-${{ github.sha }}.tar dashboard-nextjs:build-${{ github.sha }}
          docker save -o dashboard-storybook-build-${{ github.sha }}.tar dashboard-storybook:build-${{ github.sha }}
          docker save -o dashboard-graphql-build-${{ github.sha }}.tar dashboard-graphql:build-${{ github.sha }}

      # Step 4: Copy Docker images to Linode server
      - name: Copy Docker images to Linode
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOSTNAME }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          source: docker-compose-${{ github.sha }}.yml dashboard-nextjs-build-${{ github.sha }}.tar dashboard-storybook-build-${{ github.sha }}.tar dashboard-graphql-build-${{ github.sha }}.tar
          target: /home/${{ secrets.DEPLOY_USERNAME }}

      # Step 5: SSH into Linode and deploy with Docker Compose
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOSTNAME }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          debug: true
          script: |
            docker-compose down || true
            docker system prune -f

            docker load -i dashboard-nextjs-build-${{ github.sha }}.tar
            docker load -i dashboard-storybook-build-${{ github.sha }}.tar
            docker load -i dashboard-graphql-build-${{ github.sha }}.tar

            rm -f docker-compose.yml

            ln -s docker-compose-${{ github.sha }}.yml docker-compose.yml

            docker-compose up -d
