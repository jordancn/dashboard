name: Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install Docker and Docker Compose
      - name: Install Docker and Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.32.1/docker-compose-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m | sed 's/arm64/aarch64/')" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      # Step 2: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 3: Build Docker images
      - name: Build Docker images
        run: |
          sed "s/..GIT_COMMIT_SHA./${{ github.sha }}/g" docker-compose.yml > docker-compose-${{ github.sha }}.yml
          /usr/local/bin/docker-compose -f docker-compose-${{ github.sha }}.yml build

      # Step 4: Save Docker images to tar files
      - name: Save Docker images to tar files
        run: |
          docker save -o dashboard-nextjs-build-${{ github.sha }}.tar dashboard-nextjs:build-${{ github.sha }}
          docker save -o dashboard-storybook-build-${{ github.sha }}.tar dashboard-storybook:build-${{ github.sha }}
          docker save -o dashboard-graphql-build-${{ github.sha }}.tar dashboard-graphql:build-${{ github.sha }}

      # Step 5: Copy Docker images to Linode server
      - name: Copy Docker images to Linode
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOSTNAME }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          source: docker-compose-${{ github.sha }}.yml,dashboard-nextjs-build-${{ github.sha }}.tar,dashboard-storybook-build-${{ github.sha }}.tar,dashboard-graphql-build-${{ github.sha }}.tar
          target: /home/${{ secrets.DEPLOY_USERNAME }}

      # Step 6: SSH into Linode and deploy with Docker Compose
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOSTNAME }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          debug: true
          script: |
            # Remove old containers and images
            docker-compose down || true
            docker system prune -f
            docker image prune -a -f

            # Load new images
            docker load -i dashboard-nextjs-build-${{ github.sha }}.tar
            docker load -i dashboard-storybook-build-${{ github.sha }}.tar
            docker load -i dashboard-graphql-build-${{ github.sha }}.tar

            # Remove old docker-compose.yml file
            rm -f docker-compose.yml

            # Create a symlink to the new docker-compose.yml file
            ln -s docker-compose-${{ github.sha }}.yml docker-compose.yml

            # Bring up the new images
            docker-compose up -d --no-build
